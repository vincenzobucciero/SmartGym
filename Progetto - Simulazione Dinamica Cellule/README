/*  Algorithm for simulating the dynamics of 'cells'
    Consider a 2D 40x40 array. Each element of the array is called a 'cell'. A
    cell can be white or black. A white cell is displayed with a space
    (blank ' '), a black cell with 'X'. At the beginning there is only one black cell, at the 60th
    place of the first line; all other cells are white. Develop an algorithm
    iterative which, starting from the first line, updates a single line at each step
    of the array, or in the second step it updates the second row, in the third step it updates
    the third line and so on, up to the last line. At the i-th step, the i-th line comes
    updated considering only row (i-1) -sima, according to the following rule:
    cell j of the i-th row turns black if:
      to. in row (i-1) -sima cell j and cell j-1 are black and cell j + 1 is
      white;
      b. in row (i-1) -sima cells j-1 and j + 1 are black and cell j is white;
      c. in row (i-1) -sima cell j and cell j + 1 are black and cell j-1 is
      white;
      d. in row (i-1) -sima cell j is black and cells j + 1 and j-1 are white;
      e. in row (i-1) -sima cell j + 1 is black and cells j and j-1 are white.
    View the entire array both after the fourth step, both after the eighth step, and after the
    16th, 32nd, 40th step.  */
